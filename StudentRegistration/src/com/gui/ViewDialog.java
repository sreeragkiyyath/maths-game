/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ViewDialog.java
 *
 * Created on Jun 7, 2016, 3:07:15 PM
 */
package com.gui;

import com.bean.Common;
import com.bean.Record;
import com.bean.Student;
import com.query.Query;
import com.serial.SerialDeserial;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Students
 */
public class ViewDialog extends javax.swing.JDialog {

    static int count = 1;

    /** Creates new form ViewDialog */
    public ViewDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        loadTable();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        viewTable = new javax.swing.JTable();
        deleteBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        viewTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Name", "Age", "Roll Number", "College", "meta"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        viewTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(viewTable);
        viewTable.getColumnModel().getColumn(4).setMinWidth(1);
        viewTable.getColumnModel().getColumn(4).setMaxWidth(1);

        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(260, Short.MAX_VALUE)
                .addComponent(updateBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteBtn)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteBtn)
                    .addComponent(updateBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
    int selectedRowIndex = viewTable.getSelectedRow();
    int selectedColumnIndex = viewTable.getSelectedColumn();
    DefaultTableModel model = (DefaultTableModel) viewTable.getModel();
    String columName = model.getColumnName(selectedColumnIndex);
    String cellValue = String.valueOf(model.getValueAt(selectedRowIndex, selectedColumnIndex));
    int ct = 1;
    Common deserial = SerialDeserial.deserial("record");
    Record record = (Record) deserial;
    int maxCount = record.getCount();
    while (ct <= maxCount) {
        deserial = SerialDeserial.deserial(String.valueOf(ct));
        if (deserial != null && deserial instanceof Student) {
            Student student = (Student) deserial;
            if (new Query().delete(columName.toLowerCase(), cellValue, student));
            model.removeRow(ct);
        }
        ct++;
    }

}//GEN-LAST:event_deleteBtnActionPerformed

private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
    int selectedRowIndex = viewTable.getSelectedRow();
    int selectedColumnIndex = viewTable.getSelectedColumn();
    DefaultTableModel model = (DefaultTableModel) viewTable.getModel();
    String cellValue = String.valueOf(model.getValueAt(selectedRowIndex, 0));
    String cellValue1 = String.valueOf(model.getValueAt(selectedRowIndex, 1));
    String cellValue2 = String.valueOf(model.getValueAt(selectedRowIndex, 2));
    String cellValue3 = String.valueOf(model.getValueAt(selectedRowIndex, 3));
    RegForm.fileName = String.valueOf(model.getValueAt(selectedRowIndex, 4));
   
    new RegForm().dummyButton(cellValue, cellValue3, Integer.parseInt(cellValue1), Integer.parseInt(cellValue2));



}//GEN-LAST:event_updateBtnActionPerformed
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;


                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                ViewDialog dialog = new ViewDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
                new JFrame().setDefaultCloseOperation(EXIT_ON_CLOSE);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton updateBtn;
    private javax.swing.JTable viewTable;
    // End of variables declaration//GEN-END:variables

    private void loadTable() {
        DefaultTableModel model = (DefaultTableModel) viewTable.getModel();
        while (viewTable.getRowCount() > 0) {
            model.removeRow(0);
        }
        Common deserial = SerialDeserial.deserial("record");
        if (deserial != null) {
            Record record = (Record) deserial;
            int maxCount = record.getCount();
            while (count <= maxCount) {
                deserial = SerialDeserial.deserial(String.valueOf(count));
                if (deserial != null && deserial instanceof Student) {
                    Student student = (Student) deserial;
                    Object[] obj = {student.getName(), student.getAge(), student.getRollNo(),
                        student.getCollege(), student.getMetaName()};
                    model.addRow(obj);
                }
                count++;
            }
        }
    }

    private void deleteRow(int rowInd) {
        DefaultTableModel model = (DefaultTableModel) viewTable.getModel();
        model.removeRow(rowInd);
    }
}
